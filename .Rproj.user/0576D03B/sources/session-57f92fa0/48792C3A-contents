---
title: "US Analysis"
output: html_document
---
```{r include=FALSE}
source("data_prep.R")
library(dplyr)
library(plotly)
library(ggplot2)
library(scales)
```

# Monthly Patterns in US
```{r fig.cap="Figure 11: Monthly trend in US total Border Crossings", echo=FALSE}
library(plotly)
library(leaflet)
library(data.table)

df_bc[, Month := lubridate::month(Date, label = TRUE, abbr = TRUE)]
us_seasonal_plot <- df_bc[, .(Total_Volume = sum(as.numeric(value))), by = Month]

plot_ly(us_seasonal_plot, x = ~Month, y = ~Total_Volume, type = 'scatter', mode = 'lines+markers') %>%
  layout(title = "U.S. Border Crossing Seasonal Trends",
         xaxis = list(title = "Month"),
         yaxis = list(title = "Total Crossings by Month"))
```

# Monthly Patterns: Canada v.s. US
```{r fig.cap="Figure 12: Monthly trend in volumes of border crossings: Canada v.s. U.S.", echo=FALSE}
df_merged[, Month := lubridate::month(Date, label = TRUE, abbr = TRUE)]

merged_comparison <- df_merged[, .(
  Canada_Volume = sum(as.numeric(`Sum of Volume`)),
  US_Volume = sum(as.numeric(value))
), by = Month]

plot_ly(merged_comparison, x = ~Month) %>%
  add_trace(y = ~Canada_Volume, name = 'Canada', type = 'scatter', mode = 'lines+markers',
            line = list(color = 'blue'), yaxis = "y1") %>%
  add_trace(y = ~US_Volume, name = 'U.S.', type = 'scatter', mode = 'lines+markers',
            line = list(color = 'orange'), yaxis = "y2") %>%
  layout(
    title = "Monthly Border Crossing Volumes: Canada vs. U.S.",
    xaxis = list(title = "Month"),
    yaxis = list(title = "Canada Volume", side = "left", rangemode = "tozero"),
    yaxis2 = list(title = "U.S. Volume", overlaying = "y", side = "right", rangemode = "tozero"),
    legend = list(x = 0.1, y = 0.9)
  )
```

# Regional Concentration (Canada-US Boundary)
```{r fig.cap="Figure 13: Regional concentration of border-crossing volume at the boundary between Canada and US", echo=FALSE, warning=FALSE}
top30 <- df_1 %>%
  mutate(port_code = str_extract(`Port of Entry`, "^[0-9]{4}")) %>%
  group_by(port_code) %>%
  summarise(Volume = sum(`Sum of Volume`, na.rm = TRUE), .groups="drop") %>%
  arrange(desc(Volume)) %>%
  slice_head(n = 30)

coords30 <- tribble(
  ~port_code, ~lon,       ~lat,      ~port_name,
  "4971",     -79.6248,   43.6777,   "Pearson Intl T1",
  "8212",     -73.5673,   45.5017,   "VIA – Montreal",
  "4974",     -79.6248,   43.6777,   "Pearson Intl T3",
  "3961",     -73.7408,   45.4706,   "Trudeau Intl Airport",
  "8135",    -122.7579,   49.0018,   "Douglas Passenger (Peace Arch)",
  "4101",     -78.9019,   42.9030,   "Fort Erie",
  "4531",     -83.0364,   42.3140,   "Ambassador Bridge",
  "8132",    -122.7579,   49.0018,   "Pacific Highway",
  "4272",     -79.0742,   43.0896,   "Rainbow Bridge",
  "4521",     -83.0307,   42.3090,   "Windsor Tunnel",
  "4273",     -79.0660,   43.1214,   "Queenston Bridge",
  "4401",     -82.4050,   42.9991,   "Blue Water Bridge",
  "7011",    -114.0194,   51.1139,   "Calgary Intl Airport",
  "3513",     -73.3440,   45.0080,   "Lacolle Route 15",
  "4530",     -83.0364,   42.3140,   "Ambassador Bridge (Comm)",
  "8173",     -73.3660,   45.0100,   "Huntingdon Traffic",
  "4090",     -74.7306,   45.0014,   "Cornwall Traffic",
  "8150",    -122.8270,   49.0980,   "Boundary Bay",
  "4560",     -75.9310,   44.2690,   "Lansdowne Traffic",
  "4410",     -84.3469,   46.5020,   "Sault Ste. Marie",
  "8174",    -122.4840,   49.0367,   "Aldergrove Traffic",
  "3281",     -73.3670,   45.0220,   "St.-Armand Traffic",
  "8111",    -123.4260,   48.6450,   "Victoria Airport",
  "4403",     -82.4050,   42.9991,   "Blue Water Bridge (Comm)",
  "7023",    -113.5800,   53.3097,   "Edmonton Intl Airport",
  "4780",     -93.4130,   48.6010,   "Fort Frances",
  "2110",     -67.2710,   45.2040,   "St. Stephen Traffic",
  "4312",     -75.6690,   45.3220,   "Ottawa Intl Airport",
  "3141",     -72.0914,   45.0063,   "Stanstead Route 55",
  "5021",     -97.2241,   49.0078,   "Emerson West Lynne"
)

df_plot <- left_join(top30, coords30, by = "port_code")

top30_us <- df_bc %>%
  group_by(port_code) %>%
  summarise(
    Volume = sum(as.numeric(value), na.rm = TRUE),
    lon = mean(as.numeric(longitude), na.rm = TRUE),
    lat = mean(as.numeric(latitude), na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(desc(Volume)) %>%
  slice_head(n = 30)

top30_us <- left_join(
  top30_us, 
  df_bc[, .(port_code, port_name)], 
  by = "port_code"
) %>%
  distinct(port_code, .keep_all = TRUE)

leaflet() %>%
  addProviderTiles("CartoDB.Positron") %>% addCircleMarkers(
    data = df_plot,
    lng = ~lon, lat = ~lat,
    radius = ~log(Volume + 1) * 1.5,
    weight = 1,
    color = "red",
    fillColor = "red",
    fillOpacity = 0.6, 
    label = ~paste0(port_name, " (", port_code, "): ", scales::comma(Volume)),
    labelOptions = labelOptions(direction = "auto")
  ) %>% addCircleMarkers(
    data = top30_us,
    lng = ~lon, lat = ~lat,
    radius = ~log(Volume + 1) * 1.5,
    weight = 1,
    color = "blue",
    fillColor = "blue",
    fillOpacity = 0.3,  # LOWER blue transparency!
    label = ~paste0(port_name, " (", port_code, "): ", scales::comma(Volume)),
    labelOptions = labelOptions(direction = "auto")
  ) %>% setView(lng = -95, lat = 45, zoom = 3.5) %>%
  addControl(html = "<b style='color:red;'>● Canada</b> &nbsp;&nbsp; <b style='color:blue;'>● U.S.A.</b>", position = "bottomleft")
```